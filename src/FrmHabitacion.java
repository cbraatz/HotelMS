
import Hiber1.Estado;
import Hiber1.Grupo;
import Hiber1.Habitacion;
import Hiber1.NewHibernateUtil;
import Hiber1.Tipohab;
import imp.GrupoGest;
import imp.HabitacionGest;
import imp.OcupacionesGest;
import imp.RutinaGest;
import imp.SubReservaGest;
import imp.TipohabGest;
import imp.TrabajoGest;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;


public class FrmHabitacion extends javax.swing.JDialog {

    /** Creates new form FrmHabitacion */
    public FrmHabitacion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jTextField2 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setName(""); // NOI18N

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 36));
        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setText("Habitaciones");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(77, 77, 77))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 153)), "Datos del Empleado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 153))); // NOI18N

        jLabel14.setFont(new java.awt.Font("Trebuchet MS", 1, 14));
        jLabel14.setForeground(new java.awt.Color(0, 0, 204));
        jLabel14.setText("Nº de Habitación:");

        jTextField1.setBackground(new java.awt.Color(153, 153, 255));
        jTextField1.setToolTipText("NÚMERO DE HABITACIÓN");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Trebuchet MS", 1, 14));
        jLabel22.setForeground(new java.awt.Color(0, 0, 204));
        jLabel22.setText("Observaciones:");

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 1, 14));
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setText("Tipo:");

        jComboBox1.setToolTipText("TIPO DE HABITACIÓN");
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 1, 14));
        jLabel9.setForeground(new java.awt.Color(0, 0, 204));
        jLabel9.setText("Ubicación:");

        jComboBox2.setToolTipText("UBICACIÓN O GRUPO AL QUE PERTENECE LA HABITACIÓN");
        jComboBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox2MouseClicked(evt);
            }
        });
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 1, 14));
        jLabel10.setForeground(new java.awt.Color(0, 0, 204));
        jLabel10.setText("Estado:");

        jComboBox3.setToolTipText("ESTADO DE LA HABITACIÓN");
        jComboBox3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox3MouseClicked(evt);
            }
        });
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });

        jTextField2.setToolTipText("OBSERVACIONES DE LA HABITACIÓN");
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jCheckBox1.setForeground(new java.awt.Color(0, 0, 204));
        jCheckBox1.setText("Llaves presentes en recepción");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel9)
                                .addComponent(jLabel8)
                                .addComponent(jLabel14))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel22)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153)));
        jPanel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel5.setName(""); // NOI18N

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar2.png"))); // NOI18N
        jButton3.setToolTipText("CONFIRMAR/GUARDAR");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/borrar2.png"))); // NOI18N
        jButton4.setToolTipText("BORRAR");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/salir2.png"))); // NOI18N
        jButton5.setToolTipText("SALIR");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/limpiar2.png"))); // NOI18N
        jButton1.setToolTipText("LIMPIAR");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/nuevo2.png"))); // NOI18N
        jButton2.setToolTipText("NUEVO");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(139, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton5)
                    .addComponent(jButton4)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    DefaultComboBoxModel modelocombotipo1= new DefaultComboBoxModel();   //el segundo modelo uso para guargar el codigo, y asi no mostrarlo en el combo
    DefaultComboBoxModel modelocombotipo2= new DefaultComboBoxModel();
    DefaultComboBoxModel modelocomboubicacion1= new DefaultComboBoxModel();   //el segundo modelo uso para guargar el codigo, y asi no mostrarlo en el combo
    DefaultComboBoxModel modelocomboubicacion2= new DefaultComboBoxModel();
    DefaultComboBoxModel modelocomboestado1= new DefaultComboBoxModel();   //el segundo modelo uso para guargar el codigo, y asi no mostrarlo en el combo
    DefaultComboBoxModel modelocomboestado2= new DefaultComboBoxModel();
    Session Sesion=null;
    Habitacion hab=new Habitacion();
    HabitacionGest habges=new HabitacionGest();
    TrabajoGest trages=new TrabajoGest();
    OcupacionesGest ocuges=new OcupacionesGest();
    SubReservaGest subresges=new SubReservaGest();
    RutinaGest rutges=new RutinaGest();
    public void CERRARSesion(){
        if(Sesion.isOpen()){
            Sesion.flush();
            Sesion.clear();
            Sesion.close();
        }
    }
    public void limpiarCampos(){
         jTextField1.setText("");
         jTextField2.setText("");
         ubicarComboTipoEnPrimeraPosicion();
         ubicarComboUbicacionEnPrimeraPosicion();
         ubicarComboEstadoEnPrimeraPosicion();
         this.hab=new Habitacion();
         jTextField1.requestFocus();
   }
   public boolean buscarHabitacionPorId(int idh){
        boolean respu=false;
        hab=new Habitacion();
        if(habges.ExisteIdEnTabla(idh)){
            hab=habges.GetObjHabitacion();
            this.jTextField2.setText(hab.getObshab());
            this.ubicarComboEstadoEnPosicion(hab.getEstado().getIdestado());
            this.ubicarComboTipoEnPosicion(hab.getTipohab().getIdtipoh());
            this.ubicarComboUbicacionEnPosicion(hab.getGrupo().getIdgrupo());
            if(hab.getLlave()=='1')
                this.jCheckBox1.setSelected(true);
            else
                this.jCheckBox1.setSelected(false);
            respu=true;
                
        }else{
            this.hab=new Habitacion();
        }
        return respu;
   }
  
    public void cargarComboTipo(){
        Transaction tx=null;
        Sesion=NewHibernateUtil.getSessionFactory().openSession();
        try{
            tx=Sesion.beginTransaction();
            modelocombotipo1= new DefaultComboBoxModel();
            modelocombotipo2= new DefaultComboBoxModel();
            Query q=Sesion.createQuery("from Tipohab order by descripth");
            List lis= q.list();
            if(q.list().size()>0){
                for (int i=0;i<lis.size();i++){
                    Tipohab ti=new Tipohab();
                    ti=(Tipohab)lis.get(i);
                    modelocombotipo1.addElement(ti.getDescripth());
                    modelocombotipo2.addElement(ti.getIdtipoh());
                }
            }
            jComboBox1.setModel(modelocombotipo1);
            tx.commit();
       }
       catch(HibernateException e){
           tx.rollback();
            e.printStackTrace();
       }
        CERRARSesion();
   }
     public void ubicarComboTipoEnPosicion(int cod){
        int lon=this.modelocombotipo2.getSize();
        for(int i=0;i<lon;i++){
            int codi=Integer.parseInt(modelocombotipo2.getElementAt(i).toString());  //busca el codigo del otro modelo que tiene los codigos
            if(codi==cod)
                this.jComboBox1.setSelectedIndex(i);  //ubica el combo en la posicion correcta
        }
   }
   public void ubicarComboTipoEnPrimeraPosicion(){
       if(modelocombotipo2.getSize()>0)
            this.jComboBox1.setSelectedIndex(0);
   }
   public int obtenerCodigoActualDeComboTipo(){
        int resu=Integer.parseInt(modelocombotipo2.getElementAt(jComboBox1.getSelectedIndex()).toString());
        return resu;
   }
   public void cargarComboUbicacion(){
        Transaction tx=null;
        Sesion=NewHibernateUtil.getSessionFactory().openSession();
        try{
            tx=Sesion.beginTransaction();
            modelocomboubicacion1= new DefaultComboBoxModel();
            modelocomboubicacion2= new DefaultComboBoxModel();
            Query q=Sesion.createQuery("from Grupo order by descripgru");
            List lis= q.list();
            if(q.list().size()>0){
                for (int i=0;i<lis.size();i++){
                    Grupo gru=new Grupo();
                    gru=(Grupo)lis.get(i);
                    modelocomboubicacion1.addElement(gru.getDescripgru());
                    modelocomboubicacion2.addElement(gru.getIdgrupo());
                }
            }
            jComboBox2.setModel(modelocomboubicacion1);
            tx.commit();
       }
       catch(HibernateException e){
           tx.rollback();
            e.printStackTrace();
       }
        CERRARSesion();
   }
     public void ubicarComboUbicacionEnPosicion(int cod){
        int lon=this.modelocomboubicacion2.getSize();
        for(int i=0;i<lon;i++){
            int codi=Integer.parseInt(modelocomboubicacion2.getElementAt(i).toString());  //busca el codigo del otro modelo que tiene los codigos
            if(codi==cod)
                this.jComboBox2.setSelectedIndex(i);  //ubica el combo en la posicion correcta
        }
   }
   public void ubicarComboUbicacionEnPrimeraPosicion(){
      if(modelocomboubicacion2.getSize()>0) 
          this.jComboBox2.setSelectedIndex(0);
   }
   public int obtenerCodigoActualDeComboUbicacion(){
        int resu=Integer.parseInt(modelocomboubicacion2.getElementAt(jComboBox2.getSelectedIndex()).toString());
        return resu;
   }
   public void cargarComboEstado(){
        Transaction tx=null;
        Sesion=NewHibernateUtil.getSessionFactory().openSession();
        try{
            tx=Sesion.beginTransaction();
            modelocomboestado1= new DefaultComboBoxModel();
            modelocomboestado2= new DefaultComboBoxModel();
            Query q=Sesion.createQuery("from Estado order by descripest");
            List lis= q.list();
            if(q.list().size()>0){
                for (int i=0;i<lis.size();i++){
                    Estado es=new Estado();
                    es=(Estado)lis.get(i);
                    modelocomboestado1.addElement(es.getDescripest());
                    modelocomboestado2.addElement(es.getIdestado());
                }
            }
            jComboBox3.setModel(modelocomboestado1);
            tx.commit();
       }
       catch(HibernateException e){
           tx.rollback();
            e.printStackTrace();
       }
        CERRARSesion();
   }
     public void ubicarComboEstadoEnPosicion(int cod){
        int lon=this.modelocomboestado2.getSize();
        for(int i=0;i<lon;i++){
            int codi=Integer.parseInt(modelocomboestado2.getElementAt(i).toString());  //busca el codigo del otro modelo que tiene los codigos
            if(codi==cod)
                this.jComboBox3.setSelectedIndex(i);  //ubica el combo en la posicion correcta
        }
   }
   public void ubicarComboEstadoEnPrimeraPosicion(){
       if(modelocomboestado2.getSize()>0)
            this.jComboBox3.setSelectedIndex(0);
   }
   public int obtenerCodigoActualDeComboEstado(){
        int resu=Integer.parseInt(modelocomboestado2.getElementAt(jComboBox3.getSelectedIndex()).toString());
        return resu;
   }
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        if(jTextField1.getText().isEmpty()==false){                    //lost del campo numero habitacion
            if(Integer.parseInt(jTextField1.getText())>0){
                if(this.buscarHabitacionPorId(Integer.parseInt(jTextField1.getText()))==false){
                    hab=new Habitacion();
                    int r=JOptionPane.showConfirmDialog(null,"¿Es correcto este número de habitación?", "CONSULTA", JOptionPane.YES_NO_OPTION);
                    this.jTextField2.setText("");
                    if(r==JOptionPane.YES_OPTION){
                        int num=habges.getsiguientecodigo();
                        if(num>0){
                            if(num<Integer.parseInt(jTextField1.getText())){
                                r=JOptionPane.showConfirmDialog(null,"La habitación Nº "+num+" no puede ser cargada, ¿Desea cargar ésta primero?", "CONSULTA", JOptionPane.YES_NO_OPTION);
                                if(r==JOptionPane.YES_OPTION){
                                    this.jTextField1.setText(num+"");
                                }
                            }

                        }
                    }else{
                        this.limpiarCampos();
                        jTextField1.requestFocus();
                    }
                }
            }else//si es 0
                this.jTextField1.setText("");
        }
}//GEN-LAST:event_jTextField1FocusLost

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
                                                                //para validar el NUMERO HAB
        boolean esint=Character.isDigit(evt.getKeyChar());   //tira true si el boton presionado es un digito
        if(esint==false){      //si no se ingresa un digito
            if(((int)evt.getKeyChar()) == 10) //si se presiono enter
                jTextField1.transferFocus();
            else
                evt.consume();
        }
}//GEN-LAST:event_jTextField1KeyTyped

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        //NADA
}//GEN-LAST:event_jComboBox1MouseClicked

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        //NADA
}//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
                                                                        //BOTON GUARDAR
            if(jTextField1.getText().isEmpty()){ //si no esta vacio
                JOptionPane.showMessageDialog(null,"Favor ingresar un número de habitación","PETICIÓN",JOptionPane.INFORMATION_MESSAGE);
            }else{
                int codhabit=Integer.parseInt(jTextField1.getText());
                boolean encontrado=habges.ExisteIdEnTabla(codhabit);
                int r=0;
                /////////////busca el tipo/////////////////////
                Sesion = NewHibernateUtil.getSessionFactory().openSession();
                Transaction tx=Sesion.beginTransaction();
                int cod=this.obtenerCodigoActualDeComboTipo();
                Tipohab tip=new Tipohab();
                tip=(Tipohab)Sesion.get(Tipohab.class, cod);
                tx.commit();
                CERRARSesion();
                /////////////busca la ubicacion o grupo/////////////////////
                Sesion = NewHibernateUtil.getSessionFactory().openSession();
                Transaction tx1=Sesion.beginTransaction();
                cod=this.obtenerCodigoActualDeComboUbicacion();
                Grupo gr=new Grupo();
                gr=(Grupo)Sesion.get(Grupo.class, cod);
                tx1.commit();
                CERRARSesion();
                /////////////busca el estado de la habitacion/////////////////////
                Sesion = NewHibernateUtil.getSessionFactory().openSession();
                Transaction tx2=Sesion.beginTransaction();
                cod=this.obtenerCodigoActualDeComboEstado();
                Estado est=new Estado();
                est=(Estado)Sesion.get(Estado.class, cod);
                tx2.commit();
                CERRARSesion();
                if (encontrado){  //si se encontro y se desea EDITAR
                    r=JOptionPane.showConfirmDialog(null,"¿Desea EDITAR esta habitación?", "CONSULTA", JOptionPane.YES_NO_OPTION);
                    if (r==JOptionPane.YES_OPTION){ //si se presiono SI
                        try {
                            if(est != null && gr != null && tip != null){
                                Sesion = NewHibernateUtil.getSessionFactory().openSession();
                                Transaction tx3=Sesion.beginTransaction();
                                Habitacion hh=new Habitacion();
                                hh=(Habitacion) Sesion.load(Habitacion.class,codhabit);
                                hh.setObshab(this.jTextField2.getText());
                                hh.setEstado(est);
                                hh.setTipohab(tip);
                                hh.setGrupo(gr);
                                if(this.jCheckBox1.isSelected())
                                    hh.setLlave('1');
                                else
                                    hh.setLlave('0');
                                tx3.commit();
                                CERRARSesion();
                                JOptionPane.showMessageDialog(null,"La habitación fue EDITADA correctamente","AVISO",JOptionPane.INFORMATION_MESSAGE);
                            }else
                                JOptionPane.showMessageDialog(null,"La habitación no pudo ser EDITADA correctamente","ATENCIÓN",JOptionPane.INFORMATION_MESSAGE);
                            limpiarCampos();
                        } catch (HibernateException ex) {
                            JOptionPane.showMessageDialog(null,"Error al intentar EDITAR la habitación","ERROR",JOptionPane.ERROR_MESSAGE);
                            limpiarCampos();
                        } /*catch (ParseException ex2) {
                            JOptionPane.showMessageDialog(null,"Error al intentar EDITAR el registro","ERROR",JOptionPane.ERROR_MESSAGE);
                            limpiarCampos();
                        }*/
                    }
                } else{
                    r=JOptionPane.showConfirmDialog(null,"¿Desea AGREGAR esta habitación?", "CONSULTA", JOptionPane.YES_NO_OPTION);
                    if (r==JOptionPane.YES_OPTION){ //si se presiono SI
                        try {
                            if(est != null && gr != null && tip != null){
                                Sesion = NewHibernateUtil.getSessionFactory().openSession();
                                Transaction tx3=Sesion.beginTransaction();
                                Habitacion hh=new Habitacion();
                                hh.setIdhabit(codhabit);
                                hh.setObshab(this.jTextField2.getText());
                                hh.setEstado(est);
                                hh.setTipohab(tip);
                                hh.setGrupo(gr);
                                if(this.jCheckBox1.isSelected())
                                    hh.setLlave('1');
                                else
                                    hh.setLlave('0');
                                Sesion.saveOrUpdate(hh);
                                tx3.commit();
                                CERRARSesion();
                                JOptionPane.showMessageDialog(null,"La habitación fue AGREGADA correctamente","AVISO",JOptionPane.INFORMATION_MESSAGE);
                            }else
                                JOptionPane.showMessageDialog(null,"La habitación no pudo ser AGREGADA correctamente","ATENCIÓN",JOptionPane.INFORMATION_MESSAGE);
                            limpiarCampos();
                        } catch (HibernateException ex) {
                            JOptionPane.showMessageDialog(null,"Error al intentar CARGAR la habitación","ERROR",JOptionPane.ERROR_MESSAGE);
                            ex.printStackTrace();
                            limpiarCampos();
                        } /*catch (ParseException ex2) {
                            JOptionPane.showMessageDialog(null,"Error al intentar EDITAR el registro","ERROR",JOptionPane.ERROR_MESSAGE);
                            ex2.printStackTrace();
                            limpiarCampos();
                        }*/
                    }
                }
            }
        
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        int r=0;                                                     //BOTON BORRAR
        if(this.jTextField1.getText().isEmpty()==false){
            int codhabit=Integer.parseInt(jTextField1.getText());
            boolean encontrado=habges.ExisteIdEnTabla(codhabit);
            if(encontrado){
                if(rutges.ExisteFKHabitacion(codhabit)==false && ocuges.ExisteFKHabitacion(codhabit)==false && subresges.ExisteFKHabitacion(codhabit)==false && trages.ExisteFKHabitacion(codhabit)==false){
                    r=JOptionPane.showConfirmDialog(null,"¿Desea BORRAR esta habitación?", "CONSULTA", JOptionPane.YES_NO_OPTION);
                    if (r==JOptionPane.YES_OPTION){ //si se presiono SI
                        try {
                            Habitacion h=new Habitacion();
                            h=habges.GetObjHabitacion();
                            habges.delHabitacion(h);
                            JOptionPane.showMessageDialog(null,"La habitación fue BORRADA correctamente","AVISO",JOptionPane.INFORMATION_MESSAGE);
                            limpiarCampos();
                        } catch (HibernateException ex) {
                            ex.printStackTrace();
                            limpiarCampos();
                            JOptionPane.showMessageDialog(null,"Ha ocurrito un error al intentar Borrar la habitación","ERROR",JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }else
                    JOptionPane.showMessageDialog(null,"La habitación no puedo ser borrada porque está siendo utilizada","ATENCIÓN",JOptionPane.INFORMATION_MESSAGE);
            }else
                JOptionPane.showMessageDialog(null,"habitación no encontrada","ATENCIÓN",JOptionPane.INFORMATION_MESSAGE);
        }
}//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        //BOTON SALIR
        this.dispose();//sale
}//GEN-LAST:event_jButton5MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
                                                                    //BOTON LIMPIAR
        limpiarCampos();
        hab=new Habitacion();
}//GEN-LAST:event_jButton1MouseClicked

    private void jComboBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2MouseClicked

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3MouseClicked

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        this.limpiarCampos();                                        //boton nuevo
        this.jComboBox1.requestFocus();
        int codi =habges.getsiguientecodigo();
        if (codi==0)
            JOptionPane.showMessageDialog(null,"No se pudo obtener un Código nuevo","ATENCIÓN",JOptionPane.INFORMATION_MESSAGE);
        else{
            this.jTextField1.setText(codi+"");
            hab=new Habitacion();
        }
}//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
                                                                           //al abrirse el form
          this.setResizable(false);
          this.setLocationRelativeTo(null);  //centra el objeto en pantalla
          //setDefaultCloseOperation(0);
          Sesion = NewHibernateUtil.getSessionFactory().getCurrentSession();
          this.cargarComboEstado();
          this.cargarComboTipo();
          this.cargarComboUbicacion();
    }//GEN-LAST:event_formWindowOpened

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        if(jTextField2.getText().length()<60){
            if(((int)evt.getKeyChar()) == 10) //si se presiono enter
                jTextField2.transferFocus();
        } else
            evt.consume();
    }//GEN-LAST:event_jTextField2KeyTyped

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmHabitacion dialog = new FrmHabitacion(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                GrupoGest gruges=new GrupoGest();
                TipohabGest thges=new TipohabGest();
                if(gruges.ExisteGrupoCargado() && thges.ExisteTipoHabCargado())
                    dialog.setVisible(true);
                else
                    JOptionPane.showMessageDialog(null,"Para cargar una habitación debe haber cargado al menos un Tipo de habitación y un Grupo o Ubicación de la misma","ATENCIÓN",JOptionPane.INFORMATION_MESSAGE);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

}
